# Script for testing

set -e

check_disassembly=0
make_known_good=0

# Argument parsing
while (( $# )); do
	case $1 in
	--)
		shift
		break
	;;
	-c|--check-disassembly) check_disassembly=1; echo "Checking disassemblies against known good." ;;
	-m|--make-known-good) make_known_good=1; echo "Making known good." ;;
	-*)
		echo >&2 "Invalid option: $1"
		exit 1
	;;
	esac
	shift
done

# Make directories if they don't exist
mkdir -p build
mkdir -p known_good

check_identical() {
    original_dat="$1"
    new_dat="$2"

    xxd -g1 "$original_dat" >build/temp1.hex
    xxd -g1 "$new_dat"      >build/temp2.hex
    diff build/temp1.hex build/temp2.hex
}

check_disassemblies() {
    candidate_asm=$1
    known_good_asm=$2

    if [[ $check_disassembly -gt 0 ]]
    then
        diff $candidate_asm $known_good_asm
    fi

    if [[ $make_known_good -gt 0 ]]
    then
        cp -f $candidate_asm $known_good_asm
    fi
}

test() {
    source_path="$1"
    original_dat="$2"

    filename=$(basename ${source_path%.*})

    # Beebasm
    echo "Testing $filename for Beebasm"
    python3 "$source_path" > "build/${filename}_beebasm.asm"
    check_disassemblies "build/${filename}_beebasm.asm" "known_good/${filename}_beebasm.asm"
    beebasm -v -o "build/${filename}_beebasm.dat" -i "build/${filename}_beebasm.asm" > "build/${filename}_beebasm_report.txt"
    check_identical "$original_dat" "build/${filename}_beebasm.dat"

    # Acme
    echo "Testing $filename for Acme"
    python3 "$source_path" --acme > "build/${filename}_acme.asm"
    check_disassemblies "build/${filename}_acme.asm" "known_good/${filename}_acme.asm"
    acme -o "build/${filename}_acme.dat" --report "build/${filename}_acme_report.txt" --symbollist "build/${filename}_acme_symbols.txt" "build/${filename}_acme.asm"
    check_identical "$original_dat" "build/${filename}_acme.dat"

    # xa
    echo "Testing $filename for xa"
    python3 "$source_path" --xa > "build/${filename}_xa.asm"
    check_disassemblies "build/${filename}_xa.asm" "known_good/${filename}_xa.asm"
    xa -o "build/${filename}_xa.dat" -l "build/${filename}_xa_symbols.txt" "build/${filename}_xa.asm"
    check_identical "$original_dat" "build/${filename}_xa.dat"
}

test_8080() {
    source_path="$1"
    original_dat="$2"

    filename=$(basename ${source_path%.*})

    # z88dk-z80asm
    echo "Testing $filename for z88dk-z80asm"
    python3 "$source_path" --z88dk-8080 > "build/${filename}_8080.asm"
    check_disassemblies "build/${filename}_8080.asm" "known_good/${filename}_8080.asm"
    z88dk-z80asm -m8080 -b -l -s -o"build/${filename}_8080.bin" "build/${filename}_8080.asm"
    check_identical "$original_dat" "build/${filename}_8080.bin"
}

test_8080 "example8080.py" "example8080.orig"
test_8080 "test8080.py" "test8080.orig"
test "helloworld.py" "helloworld.orig"
test "basic4.py" "basic4.orig"
test "dfs226.py" "DFS226.orig"
test "dfs226b.py" "DFS226.orig"
test "anfs418.py" "anfs418.orig"
test "move.py"  "move.orig"
test "move2.py" "move2.orig"
test "split.py" "split.orig"
